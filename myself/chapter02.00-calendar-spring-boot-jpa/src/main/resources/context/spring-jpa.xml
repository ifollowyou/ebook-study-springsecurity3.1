<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath*:application.properties" />

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <jpa:repositories base-package="com.packtpub.springsecurity"
                      repository-impl-postfix="Impl"
                      transaction-manager-ref="transactionManager"/>

    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="com.packtpub.springsecurity"/>
        <property name="persistenceUnitName" value="ifollowyou"/>
        <property name="dataSource" ref="dataSource"/>

        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>

        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.connection.charSet">UTF-8</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.region_prefix">com.xman</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource"
          class="com.zaxxer.hikari.HikariDataSource" destroy-method="shutdown">
        <constructor-arg>
            <bean class="com.zaxxer.hikari.HikariConfig">
                <property name="driverClassName" value="${hikari.dataSourceClassName}"/>
                <property name="jdbcUrl" value="${hikari.url}"/>
                <property name="username" value="${hikari.name}"/>
                <property name="password" value="${hikari.password}"/>
                <property name="maximumPoolSize" value="${hikari.maximumPoolSize}"/>
                <property name="idleTimeout" value="${hikari.idleTimeout}"/>
                <property name="dataSourceProperties">
                    <props>
                        <prop key="cachePrepStmts">${hikari.cachePrepStmts}</prop>
                        <prop key="prepStmtCacheSize">${hikari.prepStmtCacheSize}</prop>
                        <prop key="prepStmtCacheSqlLimit">${hikari.prepStmtCacheSqlLimit}</prop>
                    </props>
                </property>
            </bean>
        </constructor-arg>
    </bean>
</beans>